name: deploy

on:
  pull_request:
    branches-ignore:
      - wip/*
  push:
    branches:
      - main
    tags:
      - v*

jobs:
  build-test-deploy:
    environment: production
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 14.15.3
      # https://github.com/actions/cache/blob/main/examples.md#node---yarn
      - name: Get yarn cache directory
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Restore yarn cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: 'Install dependencies'
        run: yarn install --frozen-lockfile
      - name: 'Lint'
        run: yarn run lint
      - name: 'Build API'
        run: ./.github/scripts/build-api.sh
        shell: bash
      - name: 'Test'
        run: yarn run test
      - name: 'Deploy'
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        if: ${{ github.event_name == 'push' }} && startsWith(github.ref, 'refs/tags/v')
        run: yarn serverless deploy --stage prod
      - name: 'Migrate'
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        if: ${{ github.event_name == 'push' }} && startsWith(github.ref, 'refs/tags/v')
        run: yarn workspace api migrate:deploy
